name: Maven Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Compile and Test with Maven
        run: mvn clean verify

      - name: SonarCloud Scan (Using Maven)
        run: mvn sonar:sonar -Dsonar.projectKey=kashishrastogi03_major_assignment -Dsonar.organization=kashishrastogi03 -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Upload JUnit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: '**/target/surefire-reports/TEST-*.xml'

      - name: Build Docker Image
        run: docker build -t my-java-app .

      - name: Install Grype
        run: |
          mkdir -p ./bin
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b ./bin
          echo "$(pwd)/bin" >> $GITHUB_PATH

      - name: Add Grype Ignore File
        run: |
          echo "CVE-2023-12345" > .grypeignore
          echo "CVE-2022-99999" >> .grypeignore
        shell: bash

      - name: Scan Docker Image with Grype
        run: grype my-java-app:latest --fail-on critical --file .grypeignore

      - name: Login to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ secrets.ACR_LOGIN_SERVER }} --username ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Tag and Push Image to ACR
        run: |
          docker tag my-java-app:latest ${{ secrets.ACR_LOGIN_SERVER }}/my-java-app:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/my-java-app:latest
